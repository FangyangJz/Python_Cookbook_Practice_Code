# 将一个字符串分割为多段, 分隔符并不固定
line = 'asdf fjdk; afed, fjek,asdf,  foo'
# split()方法不允许有多个分隔符或者分隔符周围有不确定空格
# 解决办法 用 re模块 的 re.split()方法
import re
# \s	匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]
# |	    指明两项之间的一个选择。要匹配 |，请使用 \|。
# *	    匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 \*。
# ( )	标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 \( 和 \)。
fields = re.split(r'(;|,|\s)\s*', line)
print(fields)

# 获取分割字符
values = fields[::2]
delimiters = fields[1::2] + [' ']
print(values)
print(delimiters)

# 再给你合成回去, 去掉了多余的空格
r = ''.join( v+d for v, d in zip(values, delimiters))
print(r)

'''
用圆括号将所有选择项括起来，相邻的选择项之间用|分隔。
但用圆括号会有一个副作用，使相关的匹配会被缓存，此时可用?:放在第一个选项前来消除这种副作用。
其中 ?: 是非捕获元之一，还有两个非捕获元是 ?= 和 ?!，
这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，
后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。
'''
r = re.split(r'(?:,|;|\s)\s*', line)
print(r)